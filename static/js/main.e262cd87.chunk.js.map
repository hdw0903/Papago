{"version":3,"sources":["error/errorCodes.js","components/ImgButton.js","customhooks/UseToastify.js","data/supportLanguages.js","components/Textarea.js","components/DropdownSelectBox.js","data/apiUrl.js","components/PapagoAPI.js","customhooks/Usedebounce.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["papagoErrorCodes","N2MT01","N2MT02","N2MT03","N2MT04","N2MT05","N2MT06","N2MT07","N2MT08","N2MT99","LD01","LD99","React","memo","className","onClick","src","alt","toastType","langCodes","NONE","id","title","KOREAN","ENGLISH","JAPANESE","CHINESE","CHINESE_TW","SPANISH","FRENCH","RUSSIAN","VIETNAMESE","THAI","INDONESIAN","GERMAN","ITALIAN","getTargets","excludeList","Object","values","filter","langCode","some","excludeItem","targets","placeholder","value","autoFocus","onChange","onKeyPress","readOnly","type","text","isResponsive","isDefault","li","p","useState","dropdownState","setDropdownState","optionalClassName","useMemo","bodyClick","e","target","includes","useEffect","document","body","addEventListener","removeEventListener","endpoint","process","url","detectURL","translateURL","errorHandler","hasOwnProperty","response","data","errorCode","message","console","error","errorMessage","inputValue","setInputValue","translatedText","setTranslatedText","source","setSource","setTarget","langsList","targetElement","setTargetElement","selectLangTitle","setSelectLangTitle","targetLangTitle","setTargetLangTitle","delay","timer","useRef","debouncedValue","setDebouncedValue","current","setTimeout","clearTimeout","useDebounce","clearDebounce","ToastContainer","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toastNotify","errorObject","setErrorObject","axios","Axios","method","autoDetect","a","detect","translate","sourceTargetInfo","currentSource","currentTarget","res","reduce","acc","cur","push","setState","key","getListElement","sources","getTargetElement","useCallback","map","clipboardCopy","navigator","clipboard","writeText","Textarea","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e262cd87.chunk.js","sourcesContent":["export const papagoErrorCodes = {\r\n  N2MT01: 'üö® source ÌååÎùºÎØ∏ÌÑ∞Í∞Ä ÌïÑÏöîÌï©ÎãàÎã§.',\r\n  N2MT02: 'üö® ÏßÄÏõêÌïòÏßÄ ÏïäÎäî source Ïñ∏Ïñ¥ÏûÖÎãàÎã§.',\r\n  N2MT03: 'üö® target ÌååÎùºÎØ∏ÌÑ∞Í∞Ä ÌïÑÏöîÌï©ÎãàÎã§.',\r\n  N2MT04: 'üö® ÏßÄÏõêÌïòÏßÄ ÏïäÎäî target Ïñ∏Ïñ¥ÏûÖÎãàÎã§.',\r\n  N2MT05: 'üö® ÏÑ†ÌÉùÎêú Ïñ∏Ïñ¥ÏôÄ Î≤àÏó≠Îê† Ïñ∏Ïñ¥Í∞Ä ÎèôÏùºÌï©ÎãàÎã§.',\r\n  N2MT06: 'üö® target Î≤àÏó≠Í∏∞Í∞Ä ÏóÜÏäµÎãàÎã§.',\r\n  N2MT07: 'üö® ÌÖçÏä§Ìä∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.',\r\n  N2MT08: 'üö® text ÌååÎùºÎØ∏ÌÑ∞Í∞Ä ÏµúÎåÄ Ïö©ÎüâÏùÑ Ï¥àÍ≥ºÌñàÏäµÎãàÎã§.',\r\n  N2MT99: 'üö® ÎÇ¥Î∂ÄÏÑúÎ≤Ñ Ïò§Î•òÏûÖÎãàÎã§.',\r\n  '010': 'üö® Î¨¥Î£åAPI ÌïòÎ£® ÏÇ¨Ïö©ÎüâÏùÑ Î™®Îëê ÏÇ¨Ïö©ÌñàÏäµÎãàÎã§.',\r\n  LD01: 'üö® textÍ∞Ä ÏóÜÏäµÎãàÎã§',\r\n  LD99: 'üö® ÎÇ¥Î∂ÄÏÑúÎ≤Ñ Ïò§Î•òÏûÖÎãàÎã§',\r\n  '00006': 'üö® ÎÑ§Ïù¥Î≤Ñ APIÌò∏Ï∂úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§',\r\n};\r\n","import React from 'react';\r\n\r\nconst ImgButton = ({ className, onClick, src, alt }) => {\r\n  return (\r\n    <button onClick={onClick}>\r\n      <img className={className} src={src} alt={alt} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImgButton);\r\n","import { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport const toastType = {\r\n  SUCCESS: 'success',\r\n  INFO: 'info',\r\n  ERROR: 'error',\r\n};\r\n\r\nexport const useToastify = () => {\r\n  const toastNotify = (message = '', type = toastType.INFO) => {\r\n    // toast.info('ü¶Ñ Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§!', {\r\n    toast[type](message, {\r\n      position: 'bottom-right',\r\n      autoClose: 2000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n  return [ToastContainer, toastNotify];\r\n};\r\n","export const langCodes = {\r\n  NONE: { id: '', title: 'Ïñ∏Ïñ¥ Í∞êÏßÄ' },\r\n  KOREAN: { id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  ENGLISH: { id: 'en', title: 'ÏòÅÏñ¥' },\r\n  JAPANESE: { id: 'ja', title: 'ÏùºÎ≥∏Ïñ¥' },\r\n  CHINESE: { id: 'zh-CH', title: 'Ï§ëÍµ≠Ïñ¥ Í∞ÑÏ≤¥' },\r\n  CHINESE_TW: { id: 'zh-TW', title: 'Ï§ëÍµ≠Ïñ¥ Î≤àÏ≤¥' },\r\n  SPANISH: { id: 'es', title: 'Ïä§ÌéòÏù∏Ïñ¥' },\r\n  FRENCH: { id: 'fr', title: 'ÌîÑÎûëÏä§Ïñ¥' },\r\n  RUSSIAN: { id: 'ru', title: 'Îü¨ÏãúÏïÑÏñ¥' },\r\n  VIETNAMESE: { id: 'vi', title: 'Î≤†Ìä∏ÎÇ®Ïñ¥' },\r\n  THAI: { id: 'ti', title: 'ÌÉúÍµ≠Ïñ¥' },\r\n  INDONESIAN: { id: 'id', title: 'Ïù∏ÎèÑÎÑ§ÏãúÏïÑÏñ¥' },\r\n  GERMAN: { id: 'de', title: 'ÎèÖÏùºÏñ¥' },\r\n  ITALIAN: { id: 'it', title: 'Ïù¥ÌÉàÎ¶¨ÏïÑÏñ¥' },\r\n};\r\n\r\nconst getTargets = (excludeList = []) => {\r\n  return Object.values(langCodes).filter((langCode) => {\r\n    return (\r\n      langCode.id !== langCodes.NONE.id &&\r\n      !excludeList.some((excludeItem) => excludeItem.id === langCode.id)\r\n    );\r\n  });\r\n};\r\n\r\n/**\r\n * Î≥ÄÏàò Ïù¥Î¶Ñ Í∑úÏπô -> ÏïîÎ¨µÏ†ÅÏúºÎ°ú\r\n * class Ïù¥Î¶ÑÏùÄ Î¨¥Ï°∞Í±¥ ÎåÄÎ¨∏ÏûêÎ°ú ÏãúÏûë : class Car {}\r\n * ÏùºÎ∞òÏ†ÅÏù∏ Í∞í(string, number)Îì§ : Î™ÖÏÇ¨Î°ú -> Î≥µÏàò, Îã®Ïàò. (list: Î≥µÏàò, item: Îã®Ïàò)\r\n * Ìï®Ïàò : ÎèôÏÇ¨ + Î™ÖÏÇ¨ : get+N , create+N, V (search) -> searchNames\r\n * boolean: is || can -> isDefault\r\n */\r\nexport default [\r\n  {\r\n    ...langCodes.NONE,\r\n    targets: getTargets(),\r\n  },\r\n  {\r\n    ...langCodes.KOREAN,\r\n    targets: getTargets(),\r\n  },\r\n  {\r\n    ...langCodes.ENGLISH,\r\n    targets: getTargets([\r\n      langCodes.SPANISH,\r\n      langCodes.RUSSIAN,\r\n      langCodes.INDONESIAN,\r\n      langCodes.GERMAN,\r\n      langCodes.ITALIAN,\r\n    ]),\r\n  },\r\n  {\r\n    ...langCodes.JAPANESE,\r\n    targets: [\r\n      langCodes.KOREAN,\r\n      langCodes.ENGLISH,\r\n      langCodes.CHINESE,\r\n      langCodes.CHINESE_TW,\r\n    ],\r\n  },\r\n  {\r\n    ...langCodes.CHINESE,\r\n    targets: [\r\n      langCodes.KOREAN,\r\n      langCodes.ENGLISH,\r\n      langCodes.JAPANESE,\r\n      langCodes.CHINESE_TW,\r\n    ],\r\n  },\r\n  {\r\n    ...langCodes.CHINESE_TW,\r\n    targets: [\r\n      langCodes.KOREAN,\r\n      langCodes.ENGLISH,\r\n      langCodes.JAPANESE,\r\n      langCodes.CHINESE,\r\n    ],\r\n  },\r\n  {\r\n    ...langCodes.SPANISH,\r\n    targets: [langCodes.KOREAN],\r\n  },\r\n  {\r\n    ...langCodes.FRENCH,\r\n    targets: [langCodes.KOREAN, langCodes.ENGLISH],\r\n  },\r\n  { ...langCodes.RUSSIAN, targets: [langCodes.KOREAN] },\r\n  {\r\n    ...langCodes.VIETNAMESE,\r\n    targets: [langCodes.KOREAN, langCodes.ENGLISH],\r\n  },\r\n  {\r\n    ...langCodes.THAI,\r\n    targets: [langCodes.KOREAN, langCodes.ENGLISH],\r\n  },\r\n  {\r\n    ...langCodes.INDONESIAN,\r\n    targets: [langCodes.KOREAN],\r\n  },\r\n  {\r\n    ...langCodes.GERMAN,\r\n    targets: [langCodes.KOREAN],\r\n  },\r\n  {\r\n    ...langCodes.ITALIAN,\r\n    targets: [langCodes.KOREAN],\r\n  },\r\n];\r\n//canTarget: ['ko', 'en','ja','zh-CN','zh-TW','ex','fr','ru','vi','th','id','de',''it]\r\n/*  en = [\r\n     {id: 'ko', title: \"ÌïúÍµ≠Ïñ¥\"},\r\n     {id: 'ja', title: \"ÏùºÎ≥∏Ïñ¥\"},\r\n     {id: 'zh-CN', title: \"Ï§ëÍµ≠Ïñ¥(Í∞ÑÏ≤¥)\"},\r\n     {id: 'zh-TW', title: \"Ï§ëÍµ≠Ïñ¥ Î≤àÏ≤¥\"},\r\n     {id: 'fr', title: \"ÌîÑÎûëÏä§Ïñ¥\"},\r\n     {id: 'vi', title: \"Î≤†Ìä∏ÎÇ®Ïñ¥\"},\r\n     {id: 'th', title: \"ÌÉúÍµ≠Ïñ¥\"},\r\n]\r\n  ja = [\r\n    { id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  { id: 'en', title: 'ÏòÅÏñ¥' },\r\n  { id: 'zh-CN', title: 'Ï§ëÍµ≠Ïñ¥(Í∞ÑÏ≤¥)' },\r\n  { id: 'zh-TW', title: 'Ï§ëÍµ≠Ïñ¥(Î≤àÏ≤¥)' },\r\n ]\r\n  zh-Ch = [\r\n     {id: 'ko', title:\"ÌïúÍµ≠Ïñ¥\"},\r\n  { id: 'en', title: 'ÏòÅÏñ¥' },\r\n\r\n     {id: 'ja', title: \"ÏùºÎ≥∏Ïñ¥\"},\r\n     {id: 'zh-TW', title: \"Ï§ëÍµ≠Ïñ¥(Î≤àÏ≤¥)\"},\r\n ]\r\n  zh-TW = [\r\n       { id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  { id: 'en', title: 'ÏòÅÏñ¥' },\r\n  { id: 'ja', title: 'ÏùºÎ≥∏Ïñ¥' },\r\n  { id: 'zh-CN', title: 'Ï§ëÍµ≠Ïñ¥(Í∞ÑÏ≤¥)' },\r\n ]\r\n  es = [\r\n       { id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  { id: 'en', title: 'ÏòÅÏñ¥' },\r\n  ]\r\n   \r\n   fr= [{ id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  { id: 'en', title: 'ÏòÅÏñ¥' },]\r\n  ru =[\r\n      {id:'ko', title: 'ÌïúÍµ≠Ïñ¥'}\r\n  ]\r\n   vi= [{ id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  { id: 'en', title: 'ÏòÅÏñ¥' },]\r\n   th= [{ id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  { id: 'en', title: 'ÏòÅÏñ¥' },]\r\n   id= [{ id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' },\r\n  ]\r\n   de= [{ id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' }]\r\n   it= [{ id: 'ko', title: 'ÌïúÍµ≠Ïñ¥' }]\r\n\r\n*/\r\n","import React from 'react';\r\n\r\nconst TranslateContainer = ({\r\n  className,\r\n  placeholder,\r\n  value,\r\n  autoFocus = false,\r\n  onChange,\r\n  onKeyPress,\r\n  readOnly = false,\r\n  type,\r\n}) => {\r\n  return (\r\n    <textarea\r\n      className={className}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      value={value}\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n      autoFocus={autoFocus}\r\n      readOnly={readOnly}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(TranslateContainer);\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\n\r\nconst DropdownSelectBox = ({\r\n  text,\r\n  isResponsive = false,\r\n  isDefault = false,\r\n  li,\r\n  p,\r\n}) => {\r\n  const [dropdownState, setDropdownState] = useState(false);\r\n  const optionalClassName = useMemo(\r\n    () => `${isResponsive && 'responsive'} ${isDefault && 'default'}`,\r\n    [isResponsive, isDefault]\r\n  );\r\n  const spanClick = () => {\r\n    setDropdownState(!dropdownState);\r\n  };\r\n  const bodyClick = (e) => {\r\n    const target = e.target.className;\r\n    const ExclusionTarget =\r\n      target.includes('dropdown_text') || target.includes('selectedLang');\r\n    if (!ExclusionTarget) {\r\n      setDropdownState(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.body.addEventListener('click', bodyClick);\r\n    return () => {\r\n      document.body.removeEventListener('click', bodyClick);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`dropdown_lang ${optionalClassName}`}>\r\n      <span\r\n        className={`dropdown_text ${optionalClassName}`}\r\n        onClick={spanClick}\r\n      >\r\n        {text}\r\n        <p className=\"selectedLang\">{p}</p>\r\n      </span>\r\n      <ul\r\n        className={`dropdown_lang_select ${optionalClassName} \r\n          ${dropdownState && 'dropdown_clicked'}`}\r\n      >\r\n        {li}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DropdownSelectBox);\r\n","const endpoint =\r\n  process.env.REACT_APP_API_URL ??\r\n  'http://mynodeexpress-env.eba-439z5hhp.ap-northeast-2.elasticbeanstalk.com';\r\nconst url = {\r\n  detectURL: `${endpoint}/api/papago/detectionLangs`,\r\n  translateURL: `${endpoint}/api/papago/translation`,\r\n};\r\nexport default url;\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport Axios from 'axios';\r\nimport useDebounce from '../customhooks/Usedebounce';\r\nimport { papagoErrorCodes } from '../error/errorCodes';\r\nimport './PapagoAPI.css';\r\nimport ImgButton from './ImgButton';\r\nimport { useToastify, toastType } from '../customhooks/UseToastify';\r\nimport langsList from '../data/supportLanguages';\r\nimport Textarea from './Textarea';\r\nimport DropdownSelectBox from './DropdownSelectBox';\r\nimport url from '../data/apiUrl';\r\n\r\nconst errorHandler = (e) => {\r\n  if (papagoErrorCodes.hasOwnProperty(e.response.data.errorCode)) {\r\n    return {\r\n      message: papagoErrorCodes[e.response.data.errorCode],\r\n      type: toastType.ERROR,\r\n    };\r\n  } else {\r\n    console.error('ÏΩòÏÜî ÏóêÎü¨ÏΩîÎìú', e.response);\r\n    return { message: e.response.data.errorMessage, type: toastType.ERROR };\r\n  }\r\n};\r\n\r\nconst PapagoAPI = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [translatedText, setTranslatedText] = useState('');\r\n  const [source, setSource] = useState('');\r\n  const [target, setTarget] = useState('ko');\r\n  const [targetElement, setTargetElement] = useState(langsList[0].targets);\r\n  const [selectLangTitle, setSelectLangTitle] = useState('Ïñ∏Ïñ¥ Í∞êÏßÄ');\r\n  const [targetLangTitle, setTargetLangTitle] = useState('Ïñ∏Ïñ¥ Í∞êÏßÄ');\r\n  const [debouncedValue, clearDebounce] = useDebounce(inputValue, 500);\r\n  const [ToastContainer, toastNotify] = useToastify();\r\n  const [errorObject, setErrorObject] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (errorObject) {\r\n      toastNotify(errorObject.message, errorObject.type);\r\n      setErrorObject(undefined);\r\n    }\r\n  }, [errorObject, toastNotify]);\r\n\r\n  const axios = (url, data) => {\r\n    return Axios({\r\n      method: 'post',\r\n      url,\r\n      data,\r\n    });\r\n  };\r\n\r\n  const autoDetect = useMemo(() => {\r\n    return async () => {\r\n      try {\r\n        const detect = await axios(url.detectURL, { data: debouncedValue });\r\n        let source, target;\r\n        if (detect.data.langCode !== 'ko') {\r\n          source = detect.data.langCode;\r\n          target = 'ko';\r\n        } else {\r\n          source = 'ko';\r\n          target = 'en';\r\n        }\r\n        return { source, target };\r\n      } catch (e) {\r\n        setErrorObject(errorHandler(e));\r\n      }\r\n    };\r\n  }, [debouncedValue]);\r\n\r\n  const translate = useMemo(() => {\r\n    return async (sourceTargetInfo) => {\r\n      const currentSource = sourceTargetInfo ? sourceTargetInfo.source : source;\r\n      const currentTarget = sourceTargetInfo ? sourceTargetInfo.target : target;\r\n      try {\r\n        const res = await axios(url.translateURL, {\r\n          source: currentSource,\r\n          target: currentTarget,\r\n          text: debouncedValue,\r\n        });\r\n        setTranslatedText(res.data);\r\n      } catch (e) {\r\n        setErrorObject(errorHandler(e));\r\n      }\r\n    };\r\n  }, [debouncedValue, source, target]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      if (!source) {\r\n        (async () => {\r\n          const sourceTargetInfo = await autoDetect();\r\n          translate(sourceTargetInfo);\r\n        })();\r\n      } else {\r\n        translate();\r\n      }\r\n    } else {\r\n      setTranslatedText('');\r\n    }\r\n  }, [debouncedValue, source, target, autoDetect, translate]);\r\n\r\n  const onChangeInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  // const onKeyPress = (e) => {\r\n  //   if (e.charCode === 13) {\r\n  //     search();\r\n  //   }\r\n  // };\r\n  const search = () => {\r\n    clearDebounce();\r\n  };\r\n\r\n  const { source: sources = [] } = useMemo(() => {\r\n    const getListElement = ({ id, title, targets }, setState) => (\r\n      <li\r\n        key={id}\r\n        onClick={() => {\r\n          setState(id);\r\n          setTargetElement(targets);\r\n          setSelectLangTitle(title);\r\n        }}\r\n      >\r\n        <p>{title}</p>\r\n      </li>\r\n    );\r\n    return langsList.reduce(\r\n      (acc, cur) => {\r\n        acc.source.push(getListElement(cur, setSource));\r\n        return acc;\r\n      },\r\n      {\r\n        source: [],\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const getTargetElement = useCallback(\r\n    targetElement.map((target) => {\r\n      return (\r\n        <li\r\n          key={target.id}\r\n          onClick={() => {\r\n            setTarget(target.id);\r\n            setTargetLangTitle(target.title);\r\n          }}\r\n        >\r\n          <p>{target.title}</p>\r\n        </li>\r\n      );\r\n    }),\r\n    [targetElement]\r\n  );\r\n\r\n  const clipboardCopy = useCallback(\r\n    (text) => {\r\n      return () => {\r\n        navigator.clipboard.writeText(text);\r\n        toastNotify('ü¶Ñ Î≥µÏÇ¨ÎêòÏóàÏäµÎãàÎã§!');\r\n      };\r\n    },\r\n    [toastNotify]\r\n  );\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"translate_lang\">\r\n          <div className=\"dropdown_position_responsive\">\r\n            <DropdownSelectBox\r\n              text=\"ÏÑ†ÌÉùÎêú Ïñ∏Ïñ¥ : \"\r\n              p={selectLangTitle}\r\n              li={sources}\r\n            />\r\n            <DropdownSelectBox\r\n              text=\"Î≤àÏó≠Îê† Ïñ∏Ïñ¥ : \"\r\n              p={targetLangTitle}\r\n              isResponsive\r\n              li={getTargetElement}\r\n            />\r\n          </div>\r\n          <div className=\"translate_form\">\r\n            <Textarea\r\n              className=\"translate_textarea\"\r\n              placeholder=\"Î≤àÏó≠Ìï† ÌÖçÏä§Ìä∏\"\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={onChangeInput}\r\n              autoFocus\r\n            />\r\n            <div className=\"menu_button\">\r\n              <ImgButton\r\n                onClick={clipboardCopy(inputValue)}\r\n                className=\"button_img\"\r\n                src={process.env.PUBLIC_URL + '/img/copy_icon.png'}\r\n                alt=\"Î≥µÏÇ¨ ÏïÑÏù¥ÏΩò\"\r\n              />\r\n              <ImgButton\r\n                onClick={search}\r\n                className=\"button_img\"\r\n                src={process.env.PUBLIC_URL + '/img/enter_icon.png'}\r\n                alt=\"Î≤àÏó≠ Î≤ÑÌäº\"\r\n              />\r\n            </div>\r\n            <Textarea\r\n              className=\"translated_textarea responsive\"\r\n              placeholder=\"Î≤àÏó≠Îêú ÌÖçÏä§Ìä∏\"\r\n              value={translatedText}\r\n              readOnly\r\n            />\r\n            <div className=\"menu_button responsive\">\r\n              <ImgButton\r\n                onClick={clipboardCopy(translatedText)}\r\n                className=\"button_img\"\r\n                src={process.env.PUBLIC_URL + '/img/copy_icon.png'}\r\n                alt=\"Î≥µÏÇ¨ ÏïÑÏù¥ÏΩò\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"translated_lang default\">\r\n          <DropdownSelectBox\r\n            text=\"Î≤àÏó≠Îê† Ïñ∏Ïñ¥ : \"\r\n            p={targetLangTitle}\r\n            isDefault\r\n            li={getTargetElement}\r\n          />\r\n          <Textarea\r\n            className=\"translated_textarea\"\r\n            placeholder=\"Î≤àÏó≠Îêú ÌÖçÏä§Ìä∏\"\r\n            value={translatedText}\r\n            readOnly\r\n          />\r\n          <div className=\"menu_button\">\r\n            <ImgButton\r\n              onClick={clipboardCopy(translatedText)}\r\n              className=\"button_img\"\r\n              src={process.env.PUBLIC_URL + '/img/copy_icon.png'}\r\n              alt=\"Î≥µÏÇ¨ ÏïÑÏù¥ÏΩò\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p>ggggg</p>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PapagoAPI);\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useDebounce(value, delay) {\r\n  const timer = useRef(null);\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    timer.current = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  const clearDebounce = () => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current);\r\n      setDebouncedValue(value);\r\n    }\r\n  };\r\n\r\n  return [debouncedValue, clearDebounce];\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div id=\"header\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + '/img/header_img.png'}\r\n          alt=\"Ìó§Îçî Ïù¥ÎØ∏ÏßÄ\"\r\n        />\r\n        <p>ÎÑ§Ïù¥Î≤Ñ ÌååÌååÍ≥†APIÎ•º Ïù¥Ïö©Ìï¥ ÎßåÎì† Î≤àÏó≠ ÏõπÏûÖÎãàÎã§.</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Header);\r\n","import React from 'react';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PapagoAPI from './components/PapagoAPI';\nimport Header from './components/Header';\nfunction App() {\n  return (\n    <>\n      <Header />\n      <PapagoAPI />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}